{
    "rules": {
        // react
        "react/jsx-no-undef": [
            0
        ],
        // jsx-control-statements
        "jsx-control-statements/jsx-choose-not-empty": 1,
        "jsx-control-statements/jsx-for-require-each": 1,
        "jsx-control-statements/jsx-for-require-of": 1,
        "jsx-control-statements/jsx-if-require-condition": 1,
        "jsx-control-statements/jsx-otherwise-once-last": 1,
        "jsx-control-statements/jsx-use-if-tag": 0,
        "jsx-control-statements/jsx-when-require-condition": 1,
        "jsx-control-statements/jsx-jcs-no-undef": 2,
        "comma-spacing": [
            2,
            {
                "before": false,
                "after": true
            }
        ],
        "keyword-spacing": [
            2,
            {
                "before": true,
                "after": true
            }
        ], // 空格
        "semi": [
            2,
            "always"
        ], // 语句强制分号结尾
        "quotes": [
            2,
            "single"
        ], //建议使用单引号
        "no-inner-declarations": [
            0,
            "both"
        ], //不建议在{}代码块内部声明变量或函数
        "no-extra-boolean-cast": 2, // 多余的感叹号转布尔型
        "no-extra-semi": 2, // 多余的分号
        "no-extra-parens": 0, // 多余的括号
        "no-empty": 2, // 空代码块
        // "no-use-before-define": [2, "nofunc"], // 使用前未定义
        "complexity": [
            1,
            20
        ], // 圈复杂度大于20 警告
        "space-before-blocks": [
            2,
            "always"
        ], // 不以新行开始的块{前面要有空格
        "space-before-function-paren": [
            2,
            {
                "anonymous": "always",
                "named": "never"
            }
        ], // 函数定义时括号前面有2空格
        "spaced-comment": 2, // 注释风格 2空格什么的
        "space-infix-ops": 2, // 中缀操作符周围 有2空格
        "space-in-parens": [
            0,
            "never"
        ], // 小括号里面要不要有空格
        "radix": 2, // parseInt必须指定第二个参数
        "operator-linebreak": [
            2,
            "before"
        ], // 换行时运算符在行尾还是行首
        "one-var-declaration-per-line": 2,
        "max-len": [
            2,
            200,
            4
        ], // 字符串最大长度
        "key-spacing": [
            2,
            {
                "beforeColon": false,
                "afterColon": true
            }
        ], // 对象字面量中冒号的前后空格
        "indent": [
            1,
            4,
            {
                "SwitchCase": 1
            }
        ], // 缩进风格, switch, case中使用缩进
        "no-multiple-empty-lines": [
            1,
            {
                "max": 2
            }
        ], // 空行最多不能超过2行
        "no-multi-str": 2, // 字符串不能用\换行
        "no-mixed-spaces-and-tabs": [
            2,
            false
        ], // 禁止混用tab和空格
        "no-console": 1, // 禁止使用console
        // 常见错误
        "comma-dangle": [
            1,
            "never"
        ], // 定义数组或对象最后多余的逗号
        "no-debugger": 1, // debugger 调试代码未删除
        "no-constant-condition": 2, // 常量作为条件
        "no-dupe-args": 2, // 参数重复
        "no-dupe-keys": 2, // 对象属性重复
        "no-duplicate-case": 2, // case重复
        "no-empty-character-class": 2, // 正则无法匹配任何值
        "no-invalid-regexp": 2, // 无效的正则
        "no-func-assign": 1, // 函数被赋值
        "valid-typeof": 2, // 无效的类型判断
        "no-unreachable": 2, // 不可能执行到的代码
        "no-unexpected-multiline": 2, // 行尾缺少分号可能导致一些意外情况
        "no-sparse-arrays": 2, // 数组中多出逗号
        "no-shadow-restricted-names": 2, // 关键词与命名冲突
        "no-undef": 0, // 变量未定义
        "no-unused-vars": 1, // 变量定义后未使用
        "react/jsx-uses-vars": 1,
        "no-cond-assign": 1, // 条件语句中禁止赋值操作
        "no-native-reassign": 2, // 禁止覆盖原生对象
        // 代码风格优化
        "no-else-return": 2, // 在else代码块中return，else是多余的
        "no-multi-spaces": 0, // 不允许多个空格
        "block-scoped-var": 2, // 变量定义后未使用
        "consistent-return": 1, // 函数返回值可能是不同类型
        "accessor-pairs": 1, // object getter/setter方法需要成对出现
        "dot-location": [
            2,
            "property"
        ], // 换行调用对象方法  点操作符应写在行首
        "no-lone-blocks": 2, // 多余的{}嵌套
        "no-labels": 2, // 无用的标记
        "no-extend-native": 1, // 禁止扩展原生对象
        "no-floating-decimal": 2, // 浮点型需要写全 禁止.2 或 2.写法
        "no-loop-func": 2, // 禁止在循环体中定义函数
        "no-new-func": 2, // 禁止new Function(...) 写法
        "no-self-compare": 2, // 不允与自己比较作为条件
        "no-sequences": 2, // 禁止可能导致结果不明确的逗号操作符
        "no-throw-literal": 2, // 禁止抛出一个直接量 应是Error对象
        "no-return-assign": [
            2,
            "always"
        ], // 不允return时有赋值操作
        "no-redeclare": [
            2,
            {
                "builtinGlobals": true
            }
        ], // 不允许重复声明
        "no-unused-expressions": [
            2,
            {
                "allowShortCircuit": false,
                "allowTernary": true
            }
        ], // 未使用的表达式
        "no-useless-call": 2, // 无意义的函数call或apply
        "no-useless-concat": 2, // 无意义的string concat
        "no-void": 2, // 禁用void
        "no-with": 2, // 禁用with
        "no-warning-comments": [
            2,
            {
                "terms": [
                    "fixme",
                    "any other term"
                ],
                "location": "anywhere"
            }
        ], // 标记未写注释
        "curly": [
            2,
            "all"
        ], // if、else、while、for代码块用{}包围
        // es6部分
        "arrow-body-style": [
            1,
            "as-needed"
        ], //要求箭头函数体使用大括号
        "arrow-parens": [
            2
        ], // 要求箭头函数的参数使用圆括号
        "arrow-spacing": [
            2
        ], // 强制箭头函数的箭头前后使用一致的空格
        "constructor-super": [
            1
        ], // 要求在构造函数中有 super() 的调用
        "generator-star-spacing": [
            2,
            {
                "before": false,
                "after": true
            }
        ], // 强制 generator 函数中 * 号周围使用一致的空格
        "no-class-assign": [
            2
        ], // 禁止修改类声明的变量
        "no-const-assign": [
            2
        ], // 禁止修改 const 声明的变量
        "no-dupe-class-members": [
            2
        ], // 禁止类成员中出现重复的名称
        "no-duplicate-imports": [
            2
        ], // disallow duplicate module imports
        "no-new-symbol": [
            2
        ], // disallow new operators with the Symbol object
        "no-restricted-imports": [
            0
        ], // disallow specified modules when loaded by import
        "no-this-before-super": [
            2
        ], // 禁止在构造函数中，在调用 super() 之前使用 this 或 super
        "no-useless-computed-key": [
            2
        ], // disallow unnecessary computed property keys in object literals
        "no-useless-constructor": [
            1
        ], // 禁用不必要的构造函数
        "no-useless-rename": [
            1
        ], // disallow renaming import, export, and destructured assignments to the same name
        "no-var": [
            2
        ], // 要求使用 let 或 const 而不是 var
        "object-shorthand": [
            0
        ], // 要求或禁止对象字面量中方法和属性使用简写语法
        "prefer-arrow-callback": [
            0
        ], // 要求使用箭头函数作为回调
        "prefer-const": [
            2
        ], // 要求使用 const 声明那些声明后不再被修改的变量
        "prefer-numeric-literals": [
            0
        ], // disallow parseInt() in favor of binary, octal, and hexadecimal literals
        "prefer-rest-params": [
            0
        ], // require rest parameters instead of arguments
        "prefer-spread": [
            0
        ], // 要求使用扩展运算符而非 .apply()
        "prefer-template": [
            0
        ], // 要求使用模板字面量而非字符串连接
        "require-yield": [
            0
        ], // 要求 generator 函数内有 yield
        "rest-spread-spacing": [
            2
        ], // enforce spacing between rest and spread operators and their expressions
        "sort-imports": [
            0
        ], // 强制模块内的 import 排序
        "symbol-description": [
            0
        ], // require symbol descriptions
        "template-curly-spacing": [
            2
        ], // 要求或禁止模板字符串中的嵌入表达式周围空格的使用
        "yield-star-spacing": [
            2
        ], // 强制在 yield* 表达式中 * 周围使用空格,
        "eqeqeq": [
            2
        ],
        "object-curly-spacing": [
            2,
            "always"
        ],
        "lines-between-class-members": [
            "error",
            "always"
        ] // 对象方法之间要用一个空行隔开
    },
    "parserOptions": {
        "ecmaVersion": 7,
        "sourceType": "module",
        "ecmaFeatures": {
            "experimentalObjectRestSpread": true,
            "experimentalDecorators": true,
            "jsx": true
        }
    },
    "env": {
        "browser": true,
        "node": true,
        "es6": true,
        "amd": true,
        "jsx-control-statements/jsx-control-statements": true
    },
    "plugins": [
        "react",
        "jsx-control-statements",
    ],
    "parser": "babel-eslint",
    // http://eslint.cn/docs/rules/
    // https://www.npmjs.com/package/eslint-plugin-react#recommended
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:jsx-control-statements/recommended"
    ]
}